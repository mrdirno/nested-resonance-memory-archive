# Pre-commit hooks for Nested Resonance Memory Research
#
# Install: pip install pre-commit && pre-commit install
# Run manually: pre-commit run --all-files
#
# Author: Aldrin Payopay <aldrin.gdf@gmail.com>
# Repository: https://github.com/mrdirno/nested-resonance-memory-archive
# License: GPL-3.0

repos:
  # Standard pre-commit hooks
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.6.0
    hooks:
      - id: trailing-whitespace
        name: Trim trailing whitespace
      - id: end-of-file-fixer
        name: Fix end-of-file
      - id: check-yaml
        name: Check YAML syntax
      - id: check-json
        name: Check JSON syntax
      - id: check-added-large-files
        name: Prevent large files
        args: ['--maxkb=5000']  # 5MB limit
      - id: check-merge-conflict
        name: Check for merge conflicts
      - id: mixed-line-ending
        name: Fix mixed line endings
        args: ['--fix=lf']

  # Python code formatting with black
  - repo: https://github.com/psf/black
    rev: 25.1.0
    hooks:
      - id: black
        name: Format code with black
        language_version: python3.9
        files: ^(code/|papers/|tests/).*\.py$

  # Python linting with pylint (relaxed for research code)
  - repo: local
    hooks:
      - id: pylint
        name: Lint code with pylint
        entry: pylint
        language: system
        types: [python]
        files: ^(code/|papers/|tests/).*\.py$
        args:
          - '--disable=C0114,C0115,C0116'  # Disable missing docstring warnings
          - '--max-line-length=120'
          - '--exit-zero'  # Don't fail on warnings

  # Python import sorting with isort
  - repo: https://github.com/PyCQA/isort
    rev: 5.13.2
    hooks:
      - id: isort
        name: Sort imports
        args: ['--profile', 'black', '--line-length', '120']
        files: ^(code/|papers/|tests/).*\.py$

  # Pytest (run quick smoke tests only, not full suite)
  - repo: local
    hooks:
      - id: pytest-quick
        name: Run quick smoke tests
        entry: pytest
        language: system
        pass_filenames: false
        always_run: true
        args:
          - 'tests/test_reality_system.py::test_reality_interface'
          - 'tests/test_bridge_integration.py::test_bridge_with_reality'
          - '-v'
          - '--maxfail=1'
          - '--tb=short'

  # Check Python syntax (fast, catches basic errors)
  - repo: local
    hooks:
      - id: python-syntax-check
        name: Check Python syntax
        entry: python -m py_compile
        language: system
        types: [python]
        files: ^(code/|papers/|tests/).*\.py$

  # Custom: check for runtime artifacts
  - repo: local
    hooks:
      - id: no-runtime-artifacts
        name: Check for runtime artifacts
        entry: bash -c 'if git diff --cached --name-only | grep -E "(\.pyc$|__pycache__|\.egg-info)"; then echo "Error: Runtime artifacts detected"; exit 1; fi'
        language: system
        pass_filenames: false

  # Custom: check for proper attribution headers
  - repo: local
    hooks:
      - id: check-attribution
        name: Check file attribution
        entry: bash -c 'for f in $(git diff --cached --name-only --diff-filter=A | grep "\.py$"); do if ! head -20 "$f" | grep -q "Author:\|aldrin"; then echo "Warning: $f missing attribution header"; fi; done; exit 0'
        language: system
        pass_filenames: false

# Configuration for individual tools
default_language_version:
  python: python3.9

# Files to exclude from all hooks
exclude: |
  (?x)^(
    .*/__pycache__/.*|
    .*\.pyc$|
    .*\.egg-info/.*|
    .*/workspace/.*|
    .*/archive/.*|
    .*\.ipynb$
  )$
